// Code generated by mockery v2.26.1. DO NOT EDIT.

package queue

import (
	models "scheduler0/models"

	mock "github.com/stretchr/testify/mock"
)

// MockJobQueueService is an autogenerated mock type for the JobQueueService type
type MockJobQueueService struct {
	mock.Mock
}

// AddServers provides a mock function with given fields: nodeIds
func (_m *MockJobQueueService) AddServers(nodeIds []uint64) {
	_m.Called(nodeIds)
}

// GetJobAllocations provides a mock function with given fields:
func (_m *MockJobQueueService) GetJobAllocations() map[uint64]uint64 {
	ret := _m.Called()

	var r0 map[uint64]uint64
	if rf, ok := ret.Get(0).(func() map[uint64]uint64); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[uint64]uint64)
		}
	}

	return r0
}

// GetSingleNodeMode provides a mock function with given fields:
func (_m *MockJobQueueService) GetSingleNodeMode() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IncrementQueueVersion provides a mock function with given fields:
func (_m *MockJobQueueService) IncrementQueueVersion() {
	_m.Called()
}

// Queue provides a mock function with given fields: jobs
func (_m *MockJobQueueService) Queue(jobs []models.Job) {
	_m.Called(jobs)
}

// RemoveServers provides a mock function with given fields: nodeIds
func (_m *MockJobQueueService) RemoveServers(nodeIds []uint64) {
	_m.Called(nodeIds)
}

// SetSingleNodeMode provides a mock function with given fields: singleNodeMode
func (_m *MockJobQueueService) SetSingleNodeMode(singleNodeMode bool) {
	_m.Called(singleNodeMode)
}

type mockConstructorTestingTNewMockJobQueueService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockJobQueueService creates a new instance of MockJobQueueService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockJobQueueService(t mockConstructorTestingTNewMockJobQueueService) *MockJobQueueService {
	mock := &MockJobQueueService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
