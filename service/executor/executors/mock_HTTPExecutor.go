// Code generated by mockery v2.26.1. DO NOT EDIT.

package executors

import (
	models "scheduler0/models"

	mock "github.com/stretchr/testify/mock"
)

// MockHTTPExecutor is an autogenerated mock type for the HTTPExecutor type
type MockHTTPExecutor struct {
	mock.Mock
}

// ExecuteHTTPJob provides a mock function with given fields: pendingJobs, successCallback, errorCallback
func (_m *MockHTTPExecutor) ExecuteHTTPJob(pendingJobs []models.Job, successCallback func([]models.Job), errorCallback func([]models.Job)) {
	_m.Called(pendingJobs, successCallback, errorCallback)
}

type mockConstructorTestingTNewMockHTTPExecutor interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockHTTPExecutor creates a new instance of MockHTTPExecutor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHTTPExecutor(t mockConstructorTestingTNewMockHTTPExecutor) *MockHTTPExecutor {
	mock := &MockHTTPExecutor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
